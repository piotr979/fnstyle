{% extends 'base.html.twig' %}
{% block body %}
	<section class="container">
    <div class="row gx-5">
    <div class="col-2">
        <h3 class="mt-4">Filters</h3>
        <p class="fw-bold">Size</p>
       {% for size in sizes %}
        <label class="d-block">
        <input 
        class="me-2 mb-2 size-input" type="checkbox" name="size[]"
         value="{{ size.size }}">{{ size.size }}</label>
       {% endfor %}
        
    <hr />

      <p class="fw-bold">Brands</p>

       {% for brand in brands %}
        <label class="d-block">
        <input class="me-2 mb-2 brands" 
            type="checkbox" name="brand" 
            value="{{ brand.name }}">{{ brand.name }}
        </label>
       {% endfor %}

        <hr />

    <p class="fw-bold">Price</p>
    <small id="price-note" class="text-danger"></small>
    <div class="d-flex price-range">
    
    <input id="price-from" type="number" min="1" max="10000" placeholder="From" >
    <input id="price-to" inputmode="numeric" class="ms-3" type="number" min="1" max="10000" placeholder="To">
    </div>
<div class="row justify-content-center">
    <button id="apply-filters" class="btn-action mt-4 fw-bold">Apply</button>
    </div>
    </div>
    <div class="col-10">
        	<div class="row mt-5">
            {% for product in products %}
			{% include 'components/item-mini.html.twig' with {
                'products' : product } %}
            {% endfor %}
		
		</div>
    </div>
    </div>
    </section>

	{% endblock %}

{% block javascripts %}
 {{ parent() }}

<script>

    // collect data 
    document.addEventListener('DOMContentLoaded', function() {
       
                const priceNote = document.getElementById('price-note');
                
                const applyFiltersBtn = document.getElementById('apply-filters');
                const stripNodeList = ( nodeList => {
                    let tempList = [];
                        [...nodeList].forEach( item => {
                        tempList.push(item.value);
                    })
                    return tempList;
                })
                applyFiltersBtn.addEventListener('click', function() {
        
                    const sizeInput = document.querySelectorAll('.size-input:checked');
                    const brandInput = document.querySelectorAll('.brands:checked');
                    const priceFromInput = document.getElementById('price-from');
                    const priceToInput = document.getElementById('price-to');
                    const priceFrom = parseInt(priceFromInput.value);
                    const priceTo = parseInt(priceToInput.value);
         
                    if (priceFrom > priceTo) {
                        priceNote.innerText = 'Check price';
                        return;
                    };
                   
                    let sizeList = stripNodeList(sizeInput);
                    let brandList = stripNodeList(brandInput);
                   

                // create path in JS without FOSjsBUndle
                // by replacing values in URL variables
                    var url = '{{ path("items_filter", 
                    {'sizes': 'sizes_',
                    'brands': 'brands_',
                    'priceFrom': 'priceFrom_',
                    'priceTo': 'priceTo_' 
                    }) }}'; 

                    url = url.replace('sizes_', sizeList);
                    url = url.replace('brands_', brandList);
                    url = url.replace('priceFrom_', priceFromInput.value);
                    url = url.replace('priceTo_', priceToInput.value);
                    location.href = url;
                })
            })
</script>
{% endblock %}

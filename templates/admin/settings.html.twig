{% extends 'admin/base.html.twig' %}

{% block body %}
	<section class="container">
		<div class="row ms-3 ms-sm-2 ms-md-0">
			<div class="col ps-0">
			{% for flash in app.flashes('notice') %}
				<p>
				{{ flash }}
				</p>
				{% endfor %}
				
				<h2 class="fw-bold">Settings</h2>
				<p>Miscellaneous</p>
			</div>
		</div>
		<div class="row mt-2">
			<div class="col-12 col-md-6 d-flex flex-row align-items-center">

				<p class="mb-0">Select tab: &nbsp;</p>
				<select id="page-switcher">
				
					<option value="Category">Categories</option>
				
					<option value="Size" 

						{% if classItem == 'Size' %}
					selected
					{% endif %}
					>Sizes</option>
					
					<option value="Color"
					{% if classItem == 'Color' %}
					selected
					{% endif %}
					>Colors</option>

					<option value="Brand"
					{% if classItem == 'Brand' %}
					selected
					{% endif %}
					>Brands</option>
				</select>
			</div>
		</div>

		{% if classItem=="Category" %}
			<div class="row">
				<div class="col">
					<table class="table">
						<thead>
							<tr>
								<th scope="col" class="d-none d-sm-table-cell">#</th>
								<th scope="col" class="d-sm-none">Act.</th>
								<th scope="col" class="d-md-table-cell">Name</th>
								<th scope="col" class="d-none d-sm-table-cell">Parent</th>
								<th scope="col" class="d-none d-sm-table-cell">Actions</th>
							</tr>
						</thead>
						<tbody>
							{% set count = 1 %}
							{% for item in items %}
							   {# get previous item #}
             {# check if lft and rgt differences are bigger than one #}
             {# if not i'ts the parent #}
							

								
								<tr class="item-row">
									<th class="d-none d-sm-table-cell" scope="row">{{ count }}</th>
									{% set count = count + 1 %}

									{# Action buttons for mobile only #}
								<td class="d-sm-none" data-feed="{{ item.name }}" data-id="{{ item.id }}" data-type="category">
									
										<button class="editButton btn-trash">
											<i class="bi bi-pencil-square"></i>
										</button>
									
										<a href="#" class="btn-trash">
											<i class="bi bi-trash"></i>
										</a>

									</td>
									{# Action btns mobile ends here #}

									<td class="d-table-cell">
										{{ item.name }}
									</td>

									<td class="d-none d-sm-table-cell">{{ item.parent }}</td>
									<td class="d-none d-sm-table-cell" data-feed="{{ item.name }}" data-id="{{ item.id }}" data-type="category">
									
										<button class="editButton btn-trash">
											<i class="bi bi-pencil-square"></i>
										</button>
									
										<a href="#" class="btn-trash">
											<i class="bi bi-trash"></i>
										</a>

									</td>
								</tr>
									
							{% endfor %}
						</tbody>
					</table>
				</div>
			{% elseif classItem=="Colors" %}
				<div class="row">
					{% for item in items %}
						{{ item.name}}
					{% endfor %}
				</div>
		


			{% elseif classItem=="Size" %}
<div class="row">
				<div class="col">
					<table class="table">
						<thead>
							<tr>
								<th scope="col" class="d-none d-sm-table-cell">#</th>
								<th scope="col" class="d-sm-none">Act.</th>
								<th scope="col" class="d-md-table-cell">Size</th>
	
								<th scope="col" class="d-none d-sm-table-cell">Actions</th>
							</tr>
						</thead>
						<tbody>
							{% set count = 1 %}
							{% for item in items %}
							   {# get previous item #}
             {# check if lft and rgt differences are bigger than one #}
             {# if not i'ts the parent #}
							

								
								<tr class="item-row">
									<th class="d-none d-sm-table-cell" scope="row">{{ count }}</th>
									{% set count = count + 1 %}

									{# Action buttons for mobile only #}
									<td class="d-sm-none">
										<button class="editButton btn-trash">
											<i class="bi bi-pencil-square"></i>
										</button>
									
										<a href="#" class="btn-trash">
											<i class="bi bi-trash"></i>
										</a>
									</td>
									{# Action btns mobile ends here #}

									<td class="d-table-cell">
										{{ item.size }}
									</td>

				
									<td class="d-none d-sm-table-cell" data-feed="{{ item.size }}" data-id="{{ item.id }}" data-type="size">
									
										<button class="editButton btn-trash">
											<i class="bi bi-pencil-square"></i>
										</button>
									
										<a href="#" class="btn-trash">
											<i class="bi bi-trash"></i>
										</a>

									</td>
								</tr>
									
							{% endfor %}
						</tbody>
					</table>
				</div>
			{% endif %}

			<!-- PAGINATION CONTROLS STARTS HERE -->
			{% if items is not null %}
				<div class="d-flex justify-content-center mt-0 my-3 mt-md-5">
					{{ knp_pagination_render(items) }}

				</div>
			{% endif %}
			<!-- PAGINATION CONTROLS ENDS HERE -->
			<div>
				<a href="{{ path('category_add') }}" id="add-item" class="btn btn-action">Add new</a>
			</div>
			<div id="modal" class="modal">
				<div class="modal-content">
					<p class="txt-center">Enter item name</p>
					<small class="txt-center" id="modal-error"></small>
					<input id="category-input" name="category" class="txt-center" value="" maxlength="20" required>
					<div class="mt-2 txt-center">
						<button id="ok-button" class="btn btn-primary">OK</button>
						<button id="cancel-button" class="btn btn-secondary">Cancel</button>
					</div>
				</div>
			</div>

		</section>
	{% endblock %}
	{% block javascripts %}
		{{ parent() }}
		<script>
			document.addEventListener("DOMContentLoaded", function () {
let feedType = '';
let id = 0;
const modal = document.getElementById("modal");
const editBtns = document.querySelectorAll(".editButton");
const catInput = document.getElementById("category-input");
// Get the <span> element that closes the modal
const okBtn = document.getElementById('ok-button');
const cancelBtn = document.getElementById("cancel-button")

/* Modal winow pops up, attaching id and inserting value to input */
editBtns.forEach((button) => button.addEventListener('click', function (e) {
const dataSet = e.target.parentNode.parentNode.dataset;
console.log(dataSet);
id = dataSet.id;
feedType = dataSet.type;
console.log(feedType);
catInput.setAttribute('value', dataSet.feed);
modal.style.display = "block";
}));

/* Modal buttons Ok and Cancel */
okBtn.addEventListener('click', function () {
const feedName = catInput.value;
if (feedName == null || feedName == '') {
const modalError = document.getElementById('modal-error');
modalError.innerText = "Input field is empty";
return;
}
	switch (feedType) {
		case 'category':
		location.href = `/admin/category-save/${id}/${feedName}`;
		break;
		case 'size':
		location.href = `/admin/size-save/${id}/${feedName}`;
		break;
		default:
		location.href = '/admin';
	}

})
cancelBtn.addEventListener('click', function () {
modal.style.display = "none";
})

const pageSwitcher = document.getElementById('page-switcher');
pageSwitcher.addEventListener('click', switchPage);
})
function switchPage(ev) {
let route = "{{ path('settings', {class: 'class'} ) }}";
route = route.replace('class', ev.target.value);
window.location = route;


}
		</script>
	{% endblock %}

{% extends 'base.html.twig' %}
{% block body %}
	<section class="container mt-4">
		<div class="row">
			<p>
				<small class="text-secondary">Home->Shop->Men->Jackets->Leather Jacket</small>
			</p>
		</div>

	</section>
	<section class="container item-single">
		<div class="row">
			<div class="col-12 col-md-6">
				<img class="width-80-cover" src="{{ images|first }}" alt="Item image">
			</div>
			<div class="mt-2 mt-md-0 col-12 col-md-6">
				<p>
					<small class="text-secondary"></small>
				</p>
				<h2 class="fw-bold">${{ product.price }}</h2>
				<p class="fw-bold mb-0">{{ product.brand }}</p>
				<p>{{ product.model }}</p>
				<ul class="list-unstyled mt-4">
					<li>
						<small>Best quality materials</small>
					</li>
					<li>
						<small>Free delivery for all orders over $100</small>
					</li>
					<li>
						<small>Return with no cost up to 14 days</small>
					</li>
				</ul>
				<div class="d-flex align-items-start">
					{% if stocks|first.qty == 0 %}
					<p>Item not in stock</p>

					{% else %}
					<p class="pe-3">Size</p>
					<select id="size-select">
						{% for size in stocks|reducer('size') %}
						<option value="{{ size }}">{{ size }}</option>
						{% endfor %}
					</select>
                </div>
				
					<div class="d-flex align-items-start">
						<p class="pe-2">Color</p>
						<select id="color-select">
							
						</select>
					</div>
	
				<p>Availability: <span id="availability"></span> in stock</p>

				<div class="d-flex align-items-center">
                <input id="amount-input" class="amt-input me-4 " type="number" min="0" max="3" value="1">
                <button data-id="{{ product.id }}" 
						data-productname="{{ product.brand.name }}"
						data-productmodel="{{ product.model}}"
						 id="add-to-cart-button" class="btn btn-action px-5"
					>Add to cart</button>
				{% endif %}
                </div>
			</div>
		</section>

        <section class="container">
        <h3 class="mt-5">Other products</h3>
		<div class="row">
			{% for product in productsList %}
			{% include 'components/item-mini.html.twig' with {
					'products': product } %}
			{% endfor %}
		</div>
	</section>
	{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>

	document.addEventListener("DOMContentLoaded", function() { 
	
	// This script below handles inputs and adding to cart.
	// Depending on selected size updates colors and quanitity of available items
	const stocks = JSON.parse('{{ stocks|json_encode|raw }}');
	// id,price,model
	// category,brand,images(array)

	let colorSelect = document.getElementById('color-select');
	let sizeSelect = document.getElementById('size-select');
	
	

	let avail = document.getElementById('availability');

	const setQuantity = (selectedColor, selectedSize ) => {
		const stock = stocks.filter( stock => 
					stock.size == selectedSize &&
					stock.colorName == selectedColor
					)
		if (stock.length > 0) {
		avail.innerHTML = stock[0].qty;
		} else {
			avail.innerHTML = '0';
		}
	}
	const updateColorSelect = (selectedSize) => {
			const relatedStocks = stocks.filter( stock => stock.size == selectedSize);
		colorSelect.innerHTML = relatedStocks.map ( stock =>
				'<option value="'+stock.colorName+'">'+stock.colorName+'</option>');
	}
	if ( Object.keys(stocks[0]).length != 0) {

	updateColorSelect(sizeSelect.value);
	setQuantity(colorSelect.value, sizeSelect.value);

	colorSelect.addEventListener('change', e => {
		setQuantity(colorSelect.value, sizeSelect.value);
	})
	sizeSelect.addEventListener('change', (e) => {
		const selectedSize = e.target.value;

	updateColorSelect(selectedSize)
		setQuantity(colorSelect.value, sizeSelect.value);
		// set Colors and quantity
	})
	}
})
</script>
{% endblock %}
